// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`storage_schema.test 1`] = `
"// generated by armkit
import { ArmResource } from '@armkit/core';
import { Construct } from 'constructs';

/**
 * Microsoft.Storage/storageAccounts
 *
 * @schema Microsoft.Storage.storageAccounts
 */
export class storageAccounts extends ArmResource {
  /**
   * Defines a \\"Microsoft.Storage.storageAccounts\\" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: storageAccountsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'storageAccounts',
    });
  }
}

/**
 * Microsoft.Storage/storageAccounts/blobServices
 *
 * @schema Microsoft.Storage.storageAccounts_blobServices
 */
export class storageAccounts_blobServices extends ArmResource {
  /**
   * Defines a \\"Microsoft.Storage.storageAccounts_blobServices\\" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: storageAccounts_blobServicesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'storageAccounts_blobServices',
    });
  }
}

/**
 * Microsoft.Storage/storageAccounts/blobServices/containers
 *
 * @schema Microsoft.Storage.storageAccounts_blobServices_containers
 */
export class storageAccounts_blobServices_containers extends ArmResource {
  /**
   * Defines a \\"Microsoft.Storage.storageAccounts_blobServices_containers\\" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: storageAccounts_blobServices_containersOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'storageAccounts_blobServices_containers',
    });
  }
}

/**
 * Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies
 *
 * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies
 */
export class storageAccounts_blobServices_containers_immutabilityPolicies extends ArmResource {
  /**
   * Defines a \\"Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies\\" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: storageAccounts_blobServices_containers_immutabilityPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'storageAccounts_blobServices_containers_immutabilityPolicies',
    });
  }
}

/**
 * Microsoft.Storage/storageAccounts/fileServices
 *
 * @schema Microsoft.Storage.storageAccounts_fileServices
 */
export class storageAccounts_fileServices extends ArmResource {
  /**
   * Defines a \\"Microsoft.Storage.storageAccounts_fileServices\\" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: storageAccounts_fileServicesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'storageAccounts_fileServices',
    });
  }
}

/**
 * Microsoft.Storage/storageAccounts/fileServices/shares
 *
 * @schema Microsoft.Storage.storageAccounts_fileServices_shares
 */
export class storageAccounts_fileServices_shares extends ArmResource {
  /**
   * Defines a \\"Microsoft.Storage.storageAccounts_fileServices_shares\\" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: storageAccounts_fileServices_sharesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'storageAccounts_fileServices_shares',
    });
  }
}

/**
 * Microsoft.Storage/storageAccounts/managementPolicies
 *
 * @schema Microsoft.Storage.storageAccounts_managementPolicies
 */
export class storageAccounts_managementPolicies extends ArmResource {
  /**
   * Defines a \\"Microsoft.Storage.storageAccounts_managementPolicies\\" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: storageAccounts_managementPoliciesOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'storageAccounts_managementPolicies',
    });
  }
}

/**
 * Microsoft.Storage/storageAccounts/privateEndpointConnections
 *
 * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections
 */
export class storageAccounts_privateEndpointConnections extends ArmResource {
  /**
   * Defines a \\"Microsoft.Storage.storageAccounts_privateEndpointConnections\\" Arm Template object
   * @param scope the scope in which to define this object
   * @param name a scope-local name for the object
   * @param options configuration options
   */
  public constructor(scope: Construct, name: string, options: storageAccounts_privateEndpointConnectionsOptions) {
    super(scope, name, {
      ...options,
      armResourceType: 'storageAccounts_privateEndpointConnections',
    });
  }
}

/**
 * Microsoft.Storage/storageAccounts
 *
 * @schema Microsoft.Storage.storageAccounts
 */
export interface storageAccountsOptions {
  /**
   * The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
   *
   * @schema Microsoft.Storage.storageAccounts#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.Storage.storageAccounts#type
   */
  readonly type: MicrosoftStorageStorageAccountsTypeEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts#apiVersion
   */
  readonly apiVersion?: MicrosoftStorageStorageAccountsApiVersionEnum;

  /**
   * Required. Gets or sets the SKU name.
   *
   * @schema Microsoft.Storage.storageAccounts#sku
   */
  readonly sku: Sku;

  /**
   * Required. Indicates the type of storage account.
   *
   * @schema Microsoft.Storage.storageAccounts#kind
   */
  readonly kind?: MicrosoftStorageStorageAccountsKindEnum;

  /**
   * Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update, the request will succeed.
   *
   * @schema Microsoft.Storage.storageAccounts#location
   */
  readonly location: string;

  /**
   * Gets or sets a list of key value pairs that describe the resource. These tags can be used for viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key with a length no greater than 128 characters and a value with a length no greater than 256 characters.
   *
   * @schema Microsoft.Storage.storageAccounts#tags
   */
  readonly tags?: { [key: string]: string };

  /**
   * The identity of the resource.
   *
   * @schema Microsoft.Storage.storageAccounts#identity
   */
  readonly identity?: Identity;

  /**
   * The parameters used to create the storage account.
   *
   * @schema Microsoft.Storage.storageAccounts#properties
   */
  readonly properties?: StorageAccountPropertiesCreateParameters;

  /**
   * @schema Microsoft.Storage.storageAccounts#resources
   */
  readonly resources?: MicrosoftStorageStorageAccountsResources[];

}

/**
 * Microsoft.Storage/storageAccounts/blobServices
 *
 * @schema Microsoft.Storage.storageAccounts_blobServices
 */
export interface storageAccounts_blobServicesOptions {
  /**
   * The name of the blob Service within the specified storage account. Blob Service Name must be 'default'
   *
   * @schema Microsoft.Storage.storageAccounts_blobServices#name
   */
  readonly name: MicrosoftStorageStorageAccountsBlobServicesNameEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_blobServices#type
   */
  readonly type: MicrosoftStorageStorageAccountsBlobServicesTypeEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_blobServices#apiVersion
   */
  readonly apiVersion?: MicrosoftStorageStorageAccountsBlobServicesApiVersionEnum;

  /**
   * The properties of a storage accountâ€™s Blob service.
   *
   * @schema Microsoft.Storage.storageAccounts_blobServices#properties
   */
  readonly properties?: BlobServicePropertiesProperties;

  /**
   * @schema Microsoft.Storage.storageAccounts_blobServices#resources
   */
  readonly resources?: storageAccounts_blobServices_containers_childResource[];

}

/**
 * Microsoft.Storage/storageAccounts/blobServices/containers
 *
 * @schema Microsoft.Storage.storageAccounts_blobServices_containers
 */
export interface storageAccounts_blobServices_containersOptions {
  /**
   * The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
   *
   * @schema Microsoft.Storage.storageAccounts_blobServices_containers#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.Storage.storageAccounts_blobServices_containers#type
   */
  readonly type: MicrosoftStorageStorageAccountsBlobServicesContainersTypeEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_blobServices_containers#apiVersion
   */
  readonly apiVersion?: MicrosoftStorageStorageAccountsBlobServicesContainersApiVersionEnum;

  /**
   * Properties of the blob container.
   *
   * @schema Microsoft.Storage.storageAccounts_blobServices_containers#properties
   */
  readonly properties?: ContainerProperties;

  /**
   * @schema Microsoft.Storage.storageAccounts_blobServices_containers#resources
   */
  readonly resources?: storageAccounts_blobServices_containers_immutabilityPolicies_childResource[];

}

/**
 * Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies
 *
 * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies
 */
export interface storageAccounts_blobServices_containers_immutabilityPoliciesOptions {
  /**
   * The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'
   *
   * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies#name
   */
  readonly name: MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesNameEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies#type
   */
  readonly type: MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesTypeEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesApiVersionEnum;

  /**
   * The properties of an ImmutabilityPolicy of a blob container.
   *
   * @schema Microsoft.Storage.storageAccounts_blobServices_containers_immutabilityPolicies#properties
   */
  readonly properties: ImmutabilityPolicyProperty;

}

/**
 * Microsoft.Storage/storageAccounts/fileServices
 *
 * @schema Microsoft.Storage.storageAccounts_fileServices
 */
export interface storageAccounts_fileServicesOptions {
  /**
   * The name of the file Service within the specified storage account. File Service Name must be \\"default\\"
   *
   * @schema Microsoft.Storage.storageAccounts_fileServices#name
   */
  readonly name: MicrosoftStorageStorageAccountsFileServicesNameEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_fileServices#type
   */
  readonly type: MicrosoftStorageStorageAccountsFileServicesTypeEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_fileServices#apiVersion
   */
  readonly apiVersion?: MicrosoftStorageStorageAccountsFileServicesApiVersionEnum;

  /**
   * The properties of File services in storage account.
   *
   * @schema Microsoft.Storage.storageAccounts_fileServices#properties
   */
  readonly properties?: FileServicePropertiesProperties;

  /**
   * @schema Microsoft.Storage.storageAccounts_fileServices#resources
   */
  readonly resources?: storageAccounts_fileServices_shares_childResource[];

}

/**
 * Microsoft.Storage/storageAccounts/fileServices/shares
 *
 * @schema Microsoft.Storage.storageAccounts_fileServices_shares
 */
export interface storageAccounts_fileServices_sharesOptions {
  /**
   * The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
   *
   * @schema Microsoft.Storage.storageAccounts_fileServices_shares#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.Storage.storageAccounts_fileServices_shares#type
   */
  readonly type: MicrosoftStorageStorageAccountsFileServicesSharesTypeEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_fileServices_shares#apiVersion
   */
  readonly apiVersion?: MicrosoftStorageStorageAccountsFileServicesSharesApiVersionEnum;

  /**
   * Properties of the file share.
   *
   * @schema Microsoft.Storage.storageAccounts_fileServices_shares#properties
   */
  readonly properties?: FileShareProperties;

}

/**
 * Microsoft.Storage/storageAccounts/managementPolicies
 *
 * @schema Microsoft.Storage.storageAccounts_managementPolicies
 */
export interface storageAccounts_managementPoliciesOptions {
  /**
   * The name of the Storage Account Management Policy. It should always be 'default'
   *
   * @schema Microsoft.Storage.storageAccounts_managementPolicies#name
   */
  readonly name: MicrosoftStorageStorageAccountsManagementPoliciesNameEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_managementPolicies#type
   */
  readonly type: MicrosoftStorageStorageAccountsManagementPoliciesTypeEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_managementPolicies#apiVersion
   */
  readonly apiVersion?: MicrosoftStorageStorageAccountsManagementPoliciesApiVersionEnum;

  /**
   * Returns the Storage Account Data Policies Rules.
   *
   * @schema Microsoft.Storage.storageAccounts_managementPolicies#properties
   */
  readonly properties?: ManagementPolicyProperties;

}

/**
 * Microsoft.Storage/storageAccounts/privateEndpointConnections
 *
 * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections
 */
export interface storageAccounts_privateEndpointConnectionsOptions {
  /**
   * The name of the private endpoint connection associated with the Storage Account
   *
   * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections#name
   */
  readonly name: string;

  /**
   * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections#type
   */
  readonly type: MicrosoftStorageStorageAccountsPrivateEndpointConnectionsTypeEnum;

  /**
   * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections#apiVersion
   */
  readonly apiVersion?: MicrosoftStorageStorageAccountsPrivateEndpointConnectionsApiVersionEnum;

  /**
   * Resource properties.
   *
   * @schema Microsoft.Storage.storageAccounts_privateEndpointConnections#properties
   */
  readonly properties?: PrivateEndpointConnectionProperties;

}

export enum MicrosoftStorageStorageAccountsTypeEnum {
  \\"MICROSOFT_STORAGE_STORAGE_ACCOUNTS\\" = 'Microsoft.Storage/storageAccounts',
}

export enum MicrosoftStorageStorageAccountsApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * The SKU of the storage account.
 *
 * @schema #/definitions/Sku
 */
export interface Sku {
  /**
   * @schema #/definitions/Sku#name
   */
  readonly name: skuNameEnum;

  /**
   * @schema #/definitions/Sku#tier
   */
  readonly tier?: skuTierEnum;

}

export enum MicrosoftStorageStorageAccountsKindEnum {
  STORAGE = 'Storage',
  \\"STORAGE_V2\\" = 'StorageV2',
  BLOB_STORAGE = 'BlobStorage',
  FILE_STORAGE = 'FileStorage',
  BLOCK_BLOB_STORAGE = 'BlockBlobStorage',
}

/**
 * Identity for the resource.
 *
 * @schema #/definitions/Identity
 */
export interface Identity {
  /**
   * The identity type.
   *
   * @schema #/definitions/Identity#type
   */
  readonly type: identityTypeEnum;

}

/**
 * The parameters used to create the storage account.
 *
 * @schema #/definitions/StorageAccountPropertiesCreateParameters
 */
export interface StorageAccountPropertiesCreateParameters {
  /**
   * User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.
   *
   * @schema #/definitions/StorageAccountPropertiesCreateParameters#customDomain
   */
  readonly customDomain?: CustomDomain;

  /**
   * Not applicable. Azure Storage encryption is enabled for all storage accounts and cannot be disabled.
   *
   * @schema #/definitions/StorageAccountPropertiesCreateParameters#encryption
   */
  readonly encryption?: Encryption;

  /**
   * Network rule set
   *
   * @schema #/definitions/StorageAccountPropertiesCreateParameters#networkAcls
   */
  readonly networkAcls?: NetworkRuleSet;

  /**
   * Required for storage accounts where kind = BlobStorage. The access tier used for billing.
   *
   * @schema #/definitions/StorageAccountPropertiesCreateParameters#accessTier
   */
  readonly accessTier?: storageAccountPropertiesCreateParametersAccessTierEnum;

  /**
   * Provides the identity based authentication settings for Azure Files.
   *
   * @schema #/definitions/StorageAccountPropertiesCreateParameters#azureFilesIdentityBasedAuthentication
   */
  readonly azureFilesIdentityBasedAuthentication?: AzureFilesIdentityBasedAuthentication;

  /**
   * Allows https traffic only to storage service if sets to true. The default value is true since API version 2019-04-01.
   *
   * @schema #/definitions/StorageAccountPropertiesCreateParameters#supportsHttpsTrafficOnly
   */
  readonly supportsHttpsTrafficOnly?: boolean;

  /**
   * Account HierarchicalNamespace enabled if sets to true.
   *
   * @schema #/definitions/StorageAccountPropertiesCreateParameters#isHnsEnabled
   */
  readonly isHnsEnabled?: boolean;

  /**
   * Allow large file shares if sets to Enabled. It cannot be disabled once it is enabled.
   *
   * @schema #/definitions/StorageAccountPropertiesCreateParameters#largeFileSharesState
   */
  readonly largeFileSharesState?: storageAccountPropertiesCreateParametersLargeFileSharesStateEnum;

  /**
   * Maintains information about the network routing choice opted by the user for data transfer
   *
   * @schema #/definitions/StorageAccountPropertiesCreateParameters#routingPreference
   */
  readonly routingPreference?: RoutingPreference;

}

/**
 * @schema MicrosoftStorageStorageAccountsResources
 */
export class MicrosoftStorageStorageAccountsResources {
  public static fromStorageAccounts_fileServices_childResource(value: storageAccounts_fileServices_childResource): MicrosoftStorageStorageAccountsResources {
    return new MicrosoftStorageStorageAccountsResources(value);
  }
  public static fromStorageAccounts_blobServices_childResource(value: storageAccounts_blobServices_childResource): MicrosoftStorageStorageAccountsResources {
    return new MicrosoftStorageStorageAccountsResources(value);
  }
  public static fromStorageAccounts_privateEndpointConnections_childResource(value: storageAccounts_privateEndpointConnections_childResource): MicrosoftStorageStorageAccountsResources {
    return new MicrosoftStorageStorageAccountsResources(value);
  }
  public static fromStorageAccounts_managementPolicies_childResource(value: storageAccounts_managementPolicies_childResource): MicrosoftStorageStorageAccountsResources {
    return new MicrosoftStorageStorageAccountsResources(value);
  }
  private constructor(value: any) {
    Object.defineProperty(this, 'resolve', { value: () => value });
  }
}

export enum MicrosoftStorageStorageAccountsBlobServicesNameEnum {
  DEFAULT = 'default',
}

export enum MicrosoftStorageStorageAccountsBlobServicesTypeEnum {
  \\"MICROSOFT_STORAGE_STORAGE_ACCOUNTS_BLOB_SERVICES\\" = 'Microsoft.Storage/storageAccounts/blobServices',
}

export enum MicrosoftStorageStorageAccountsBlobServicesApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * The properties of a storage accountâ€™s Blob service.
 *
 * @schema #/definitions/BlobServicePropertiesProperties
 */
export interface BlobServicePropertiesProperties {
  /**
   * Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the Blob service.
   *
   * @schema #/definitions/BlobServicePropertiesProperties#cors
   */
  readonly cors?: CorsRules;

  /**
   * DefaultServiceVersion indicates the default version to use for requests to the Blob service if an incoming requestâ€™s version is not specified. Possible values include version 2008-10-27 and all more recent versions.
   *
   * @schema #/definitions/BlobServicePropertiesProperties#defaultServiceVersion
   */
  readonly defaultServiceVersion?: string;

  /**
   * The blob service properties for blob soft delete.
   *
   * @schema #/definitions/BlobServicePropertiesProperties#deleteRetentionPolicy
   */
  readonly deleteRetentionPolicy?: DeleteRetentionPolicy;

  /**
   * Automatic Snapshot is enabled if set to true.
   *
   * @schema #/definitions/BlobServicePropertiesProperties#automaticSnapshotPolicyEnabled
   */
  readonly automaticSnapshotPolicyEnabled?: boolean;

  /**
   * The blob service properties for change feed events.
   *
   * @schema #/definitions/BlobServicePropertiesProperties#changeFeed
   */
  readonly changeFeed?: ChangeFeed;

}

/**
 * Microsoft.Storage/storageAccounts/blobServices/containers
 *
 * @schema #/definitions/storageAccounts_blobServices_containers_childResource
 */
export interface storageAccounts_blobServices_containers_childResource {
  /**
   * The name of the blob container within the specified storage account. Blob container names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
   *
   * @schema #/definitions/storageAccounts_blobServices_containers_childResource#name
   */
  readonly name: string;

  /**
   * @schema #/definitions/storageAccounts_blobServices_containers_childResource#type
   */
  readonly type: storageAccountsBlobServicesContainersChildResourceTypeEnum;

  /**
   * @schema #/definitions/storageAccounts_blobServices_containers_childResource#apiVersion
   */
  readonly apiVersion: storageAccountsBlobServicesContainersChildResourceApiVersionEnum;

  /**
   * Properties of the blob container.
   *
   * @schema #/definitions/storageAccounts_blobServices_containers_childResource#properties
   */
  readonly properties?: ContainerProperties;

  /**
   * @schema #/definitions/storageAccounts_blobServices_containers_childResource#resources
   */
  readonly resources?: storageAccounts_blobServices_containers_immutabilityPolicies_childResource[];

}

export enum MicrosoftStorageStorageAccountsBlobServicesContainersTypeEnum {
  \\"MICROSOFT_STORAGE_STORAGE_ACCOUNTS_BLOB_SERVICES_CONTAINERS\\" = 'Microsoft.Storage/storageAccounts/blobServices/containers',
}

export enum MicrosoftStorageStorageAccountsBlobServicesContainersApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * The properties of a container.
 *
 * @schema #/definitions/ContainerProperties
 */
export interface ContainerProperties {
  /**
   * Specifies whether data in the container may be accessed publicly and the level of access.
   *
   * @schema #/definitions/ContainerProperties#publicAccess
   */
  readonly publicAccess?: containerPropertiesPublicAccessEnum;

  /**
   * A name-value pair to associate with the container as metadata.
   *
   * @schema #/definitions/ContainerProperties#metadata
   */
  readonly metadata?: { [key: string]: string };

}

/**
 * Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies
 *
 * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource
 */
export interface storageAccounts_blobServices_containers_immutabilityPolicies_childResource {
  /**
   * The name of the blob container immutabilityPolicy within the specified storage account. ImmutabilityPolicy Name must be 'default'
   *
   * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource#name
   */
  readonly name: storageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceNameEnum;

  /**
   * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource#type
   */
  readonly type: storageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceTypeEnum;

  /**
   * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource#apiVersion
   */
  readonly apiVersion: storageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceApiVersionEnum;

  /**
   * The properties of an ImmutabilityPolicy of a blob container.
   *
   * @schema #/definitions/storageAccounts_blobServices_containers_immutabilityPolicies_childResource#properties
   */
  readonly properties?: ImmutabilityPolicyProperty;

}

export enum MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesNameEnum {
  DEFAULT = 'default',
}

export enum MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesTypeEnum {
  \\"MICROSOFT_STORAGE_STORAGE_ACCOUNTS_BLOB_SERVICES_CONTAINERS_IMMUTABILITY_POLICIES\\" = 'Microsoft.Storage/storageAccounts/blobServices/containers/immutabilityPolicies',
}

export enum MicrosoftStorageStorageAccountsBlobServicesContainersImmutabilityPoliciesApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * The properties of an ImmutabilityPolicy of a blob container.
 *
 * @schema #/definitions/ImmutabilityPolicyProperty
 */
export interface ImmutabilityPolicyProperty {
  /**
   * The immutability period for the blobs in the container since the policy creation, in days.
   *
   * @schema #/definitions/ImmutabilityPolicyProperty#immutabilityPeriodSinceCreationInDays
   */
  readonly immutabilityPeriodSinceCreationInDays: number;

}

export enum MicrosoftStorageStorageAccountsFileServicesNameEnum {
  DEFAULT = 'default',
}

export enum MicrosoftStorageStorageAccountsFileServicesTypeEnum {
  \\"MICROSOFT_STORAGE_STORAGE_ACCOUNTS_FILE_SERVICES\\" = 'Microsoft.Storage/storageAccounts/fileServices',
}

export enum MicrosoftStorageStorageAccountsFileServicesApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * The properties of File services in storage account.
 *
 * @schema #/definitions/FileServicePropertiesProperties
 */
export interface FileServicePropertiesProperties {
  /**
   * Specifies CORS rules for the File service. You can include up to five CorsRule elements in the request. If no CorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the File service.
   *
   * @schema #/definitions/FileServicePropertiesProperties#cors
   */
  readonly cors?: CorsRules;

  /**
   * The file service properties for share soft delete.
   *
   * @schema #/definitions/FileServicePropertiesProperties#shareDeleteRetentionPolicy
   */
  readonly shareDeleteRetentionPolicy?: DeleteRetentionPolicy;

}

/**
 * Microsoft.Storage/storageAccounts/fileServices/shares
 *
 * @schema #/definitions/storageAccounts_fileServices_shares_childResource
 */
export interface storageAccounts_fileServices_shares_childResource {
  /**
   * The name of the file share within the specified storage account. File share names must be between 3 and 63 characters in length and use numbers, lower-case letters and dash (-) only. Every dash (-) character must be immediately preceded and followed by a letter or number.
   *
   * @schema #/definitions/storageAccounts_fileServices_shares_childResource#name
   */
  readonly name: string;

  /**
   * @schema #/definitions/storageAccounts_fileServices_shares_childResource#type
   */
  readonly type: storageAccountsFileServicesSharesChildResourceTypeEnum;

  /**
   * @schema #/definitions/storageAccounts_fileServices_shares_childResource#apiVersion
   */
  readonly apiVersion: storageAccountsFileServicesSharesChildResourceApiVersionEnum;

  /**
   * Properties of the file share.
   *
   * @schema #/definitions/storageAccounts_fileServices_shares_childResource#properties
   */
  readonly properties?: FileShareProperties;

}

export enum MicrosoftStorageStorageAccountsFileServicesSharesTypeEnum {
  \\"MICROSOFT_STORAGE_STORAGE_ACCOUNTS_FILE_SERVICES_SHARES\\" = 'Microsoft.Storage/storageAccounts/fileServices/shares',
}

export enum MicrosoftStorageStorageAccountsFileServicesSharesApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * The properties of the file share.
 *
 * @schema #/definitions/FileShareProperties
 */
export interface FileShareProperties {
  /**
   * A name-value pair to associate with the share as metadata.
   *
   * @schema #/definitions/FileShareProperties#metadata
   */
  readonly metadata?: { [key: string]: string };

  /**
   * The maximum size of the share, in gigabytes. Must be greater than 0, and less than or equal to 5TB (5120). For Large File Shares, the maximum size is 102400.
   *
   * @schema #/definitions/FileShareProperties#shareQuota
   */
  readonly shareQuota?: number;

}

export enum MicrosoftStorageStorageAccountsManagementPoliciesNameEnum {
  DEFAULT = 'default',
}

export enum MicrosoftStorageStorageAccountsManagementPoliciesTypeEnum {
  \\"MICROSOFT_STORAGE_STORAGE_ACCOUNTS_MANAGEMENT_POLICIES\\" = 'Microsoft.Storage/storageAccounts/managementPolicies',
}

export enum MicrosoftStorageStorageAccountsManagementPoliciesApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * The Storage Account ManagementPolicy properties.
 *
 * @schema #/definitions/ManagementPolicyProperties
 */
export interface ManagementPolicyProperties {
  /**
   * The Storage Account ManagementPolicy, in JSON format. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
   *
   * @schema #/definitions/ManagementPolicyProperties#policy
   */
  readonly policy: ManagementPolicySchema;

}

export enum MicrosoftStorageStorageAccountsPrivateEndpointConnectionsTypeEnum {
  \\"MICROSOFT_STORAGE_STORAGE_ACCOUNTS_PRIVATE_ENDPOINT_CONNECTIONS\\" = 'Microsoft.Storage/storageAccounts/privateEndpointConnections',
}

export enum MicrosoftStorageStorageAccountsPrivateEndpointConnectionsApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * Properties of the PrivateEndpointConnectProperties.
 *
 * @schema #/definitions/PrivateEndpointConnectionProperties
 */
export interface PrivateEndpointConnectionProperties {
  /**
   * The resource of private end point.
   *
   * @schema #/definitions/PrivateEndpointConnectionProperties#privateEndpoint
   */
  readonly privateEndpoint?: string;

  /**
   * A collection of information about the state of the connection between service consumer and provider.
   *
   * @schema #/definitions/PrivateEndpointConnectionProperties#privateLinkServiceConnectionState
   */
  readonly privateLinkServiceConnectionState: PrivateLinkServiceConnectionState;

  /**
   * The provisioning state of the private endpoint connection resource.
   *
   * @schema #/definitions/PrivateEndpointConnectionProperties#provisioningState
   */
  readonly provisioningState?: privateEndpointConnectionPropertiesProvisioningStateEnum;

}

export enum skuNameEnum {
  STANDARD_LRS = 'Standard_LRS',
  STANDARD_GRS = 'Standard_GRS',
  STANDARD_RAGRS = 'Standard_RAGRS',
  STANDARD_ZRS = 'Standard_ZRS',
  PREMIUM_LRS = 'Premium_LRS',
  PREMIUM_ZRS = 'Premium_ZRS',
  STANDARD_GZRS = 'Standard_GZRS',
  STANDARD_RAGZRS = 'Standard_RAGZRS',
}

export enum skuTierEnum {
  STANDARD = 'Standard',
  PREMIUM = 'Premium',
}

export enum identityTypeEnum {
  SYSTEM_ASSIGNED = 'SystemAssigned',
}

/**
 * The custom domain assigned to this storage account. This can be set via Update.
 *
 * @schema #/definitions/CustomDomain
 */
export interface CustomDomain {
  /**
   * Gets or sets the custom domain name assigned to the storage account. Name is the CNAME source.
   *
   * @schema #/definitions/CustomDomain#name
   */
  readonly name: string;

  /**
   * Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates.
   *
   * @schema #/definitions/CustomDomain#useSubDomainName
   */
  readonly useSubDomainName?: boolean;

}

/**
 * The encryption settings on the storage account.
 *
 * @schema #/definitions/Encryption
 */
export interface Encryption {
  /**
   * List of services which support encryption.
   *
   * @schema #/definitions/Encryption#services
   */
  readonly services?: EncryptionServices;

  /**
   * The encryption keySource (provider). Possible values (case-insensitive):  Microsoft.Storage, Microsoft.Keyvault.
   *
   * @schema #/definitions/Encryption#keySource
   */
  readonly keySource: encryptionKeySourceEnum;

  /**
   * Properties provided by key vault.
   *
   * @schema #/definitions/Encryption#keyvaultproperties
   */
  readonly keyvaultproperties?: KeyVaultProperties;

}

/**
 * Network rule set
 *
 * @schema #/definitions/NetworkRuleSet
 */
export interface NetworkRuleSet {
  /**
   * Specifies whether traffic is bypassed for Logging/Metrics/AzureServices. Possible values are any combination of Logging|Metrics|AzureServices (For example, \\"Logging, Metrics\\"), or None to bypass none of those traffics.
   *
   * @schema #/definitions/NetworkRuleSet#bypass
   */
  readonly bypass?: networkRuleSetBypassEnum;

  /**
   * Sets the virtual network rules
   *
   * @schema #/definitions/NetworkRuleSet#virtualNetworkRules
   */
  readonly virtualNetworkRules?: VirtualNetworkRule[];

  /**
   * Sets the IP ACL rules
   *
   * @schema #/definitions/NetworkRuleSet#ipRules
   */
  readonly ipRules?: IpRule[];

  /**
   * Specifies the default action of allow or deny when no other rules match.
   *
   * @schema #/definitions/NetworkRuleSet#defaultAction
   */
  readonly defaultAction: networkRuleSetDefaultActionEnum;

}

export enum storageAccountPropertiesCreateParametersAccessTierEnum {
  HOT = 'Hot',
  COOL = 'Cool',
}

/**
 * Settings for Azure Files identity based authentication.
 *
 * @schema #/definitions/AzureFilesIdentityBasedAuthentication
 */
export interface AzureFilesIdentityBasedAuthentication {
  /**
   * Indicates the directory service used.
   *
   * @schema #/definitions/AzureFilesIdentityBasedAuthentication#directoryServiceOptions
   */
  readonly directoryServiceOptions: azureFilesIdentityBasedAuthenticationDirectoryServiceOptionsEnum;

  /**
   * Required if choose AD.
   *
   * @schema #/definitions/AzureFilesIdentityBasedAuthentication#activeDirectoryProperties
   */
  readonly activeDirectoryProperties?: ActiveDirectoryProperties;

}

export enum storageAccountPropertiesCreateParametersLargeFileSharesStateEnum {
  DISABLED = 'Disabled',
  ENABLED = 'Enabled',
}

/**
 * Routing preference defines the type of network, either microsoft or internet routing to be used to deliver the user data, the default option is microsoft routing
 *
 * @schema #/definitions/RoutingPreference
 */
export interface RoutingPreference {
  /**
   * Routing Choice defines the kind of network routing opted by the user.
   *
   * @schema #/definitions/RoutingPreference#routingChoice
   */
  readonly routingChoice?: routingPreferenceRoutingChoiceEnum;

  /**
   * A boolean flag which indicates whether microsoft routing storage endpoints are to be published
   *
   * @schema #/definitions/RoutingPreference#publishMicrosoftEndpoints
   */
  readonly publishMicrosoftEndpoints?: boolean;

  /**
   * A boolean flag which indicates whether internet routing storage endpoints are to be published
   *
   * @schema #/definitions/RoutingPreference#publishInternetEndpoints
   */
  readonly publishInternetEndpoints?: boolean;

}

/**
 * Microsoft.Storage/storageAccounts/fileServices
 *
 * @schema #/definitions/storageAccounts_fileServices_childResource
 */
export interface storageAccounts_fileServices_childResource {
  /**
   * The name of the file Service within the specified storage account. File Service Name must be \\"default\\"
   *
   * @schema #/definitions/storageAccounts_fileServices_childResource#name
   */
  readonly name: storageAccountsFileServicesChildResourceNameEnum;

  /**
   * @schema #/definitions/storageAccounts_fileServices_childResource#type
   */
  readonly type: storageAccountsFileServicesChildResourceTypeEnum;

  /**
   * @schema #/definitions/storageAccounts_fileServices_childResource#apiVersion
   */
  readonly apiVersion: storageAccountsFileServicesChildResourceApiVersionEnum;

  /**
   * The properties of File services in storage account.
   *
   * @schema #/definitions/storageAccounts_fileServices_childResource#properties
   */
  readonly properties?: FileServicePropertiesProperties;

  /**
   * @schema #/definitions/storageAccounts_fileServices_childResource#resources
   */
  readonly resources?: storageAccounts_fileServices_shares_childResource[];

}

/**
 * Microsoft.Storage/storageAccounts/blobServices
 *
 * @schema #/definitions/storageAccounts_blobServices_childResource
 */
export interface storageAccounts_blobServices_childResource {
  /**
   * The name of the blob Service within the specified storage account. Blob Service Name must be 'default'
   *
   * @schema #/definitions/storageAccounts_blobServices_childResource#name
   */
  readonly name: storageAccountsBlobServicesChildResourceNameEnum;

  /**
   * @schema #/definitions/storageAccounts_blobServices_childResource#type
   */
  readonly type: storageAccountsBlobServicesChildResourceTypeEnum;

  /**
   * @schema #/definitions/storageAccounts_blobServices_childResource#apiVersion
   */
  readonly apiVersion: storageAccountsBlobServicesChildResourceApiVersionEnum;

  /**
   * The properties of a storage accountâ€™s Blob service.
   *
   * @schema #/definitions/storageAccounts_blobServices_childResource#properties
   */
  readonly properties?: BlobServicePropertiesProperties;

  /**
   * @schema #/definitions/storageAccounts_blobServices_childResource#resources
   */
  readonly resources?: storageAccounts_blobServices_containers_childResource[];

}

/**
 * Microsoft.Storage/storageAccounts/privateEndpointConnections
 *
 * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource
 */
export interface storageAccounts_privateEndpointConnections_childResource {
  /**
   * The name of the private endpoint connection associated with the Storage Account
   *
   * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource#name
   */
  readonly name: string;

  /**
   * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource#type
   */
  readonly type: storageAccountsPrivateEndpointConnectionsChildResourceTypeEnum;

  /**
   * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource#apiVersion
   */
  readonly apiVersion: storageAccountsPrivateEndpointConnectionsChildResourceApiVersionEnum;

  /**
   * Resource properties.
   *
   * @schema #/definitions/storageAccounts_privateEndpointConnections_childResource#properties
   */
  readonly properties?: PrivateEndpointConnectionProperties;

}

/**
 * Microsoft.Storage/storageAccounts/managementPolicies
 *
 * @schema #/definitions/storageAccounts_managementPolicies_childResource
 */
export interface storageAccounts_managementPolicies_childResource {
  /**
   * The name of the Storage Account Management Policy. It should always be 'default'
   *
   * @schema #/definitions/storageAccounts_managementPolicies_childResource#name
   */
  readonly name: storageAccountsManagementPoliciesChildResourceNameEnum;

  /**
   * @schema #/definitions/storageAccounts_managementPolicies_childResource#type
   */
  readonly type: storageAccountsManagementPoliciesChildResourceTypeEnum;

  /**
   * @schema #/definitions/storageAccounts_managementPolicies_childResource#apiVersion
   */
  readonly apiVersion: storageAccountsManagementPoliciesChildResourceApiVersionEnum;

  /**
   * Returns the Storage Account Data Policies Rules.
   *
   * @schema #/definitions/storageAccounts_managementPolicies_childResource#properties
   */
  readonly properties?: ManagementPolicyProperties;

}

/**
 * Sets the CORS rules. You can include up to five CorsRule elements in the request. 
 *
 * @schema #/definitions/CorsRules
 */
export interface CorsRules {
  /**
   * The List of CORS rules. You can include up to five CorsRule elements in the request. 
   *
   * @schema #/definitions/CorsRules#corsRules
   */
  readonly corsRules?: CorsRule[];

}

/**
 * The service properties for soft delete.
 *
 * @schema #/definitions/DeleteRetentionPolicy
 */
export interface DeleteRetentionPolicy {
  /**
   * Indicates whether DeleteRetentionPolicy is enabled.
   *
   * @schema #/definitions/DeleteRetentionPolicy#enabled
   */
  readonly enabled?: boolean;

  /**
   * Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and the maximum value can be 365.
   *
   * @schema #/definitions/DeleteRetentionPolicy#days
   */
  readonly days?: number;

}

/**
 * The blob service properties for change feed events.
 *
 * @schema #/definitions/ChangeFeed
 */
export interface ChangeFeed {
  /**
   * Indicates whether change feed event logging is enabled for the Blob service.
   *
   * @schema #/definitions/ChangeFeed#enabled
   */
  readonly enabled?: boolean;

}

export enum storageAccountsBlobServicesContainersChildResourceTypeEnum {
  CONTAINERS = 'containers',
}

export enum storageAccountsBlobServicesContainersChildResourceApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

export enum containerPropertiesPublicAccessEnum {
  CONTAINER = 'Container',
  BLOB = 'Blob',
  NONE = 'None',
}

export enum storageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceNameEnum {
  DEFAULT = 'default',
}

export enum storageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceTypeEnum {
  IMMUTABILITY_POLICIES = 'immutabilityPolicies',
}

export enum storageAccountsBlobServicesContainersImmutabilityPoliciesChildResourceApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

export enum storageAccountsFileServicesSharesChildResourceTypeEnum {
  SHARES = 'shares',
}

export enum storageAccountsFileServicesSharesChildResourceApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
 *
 * @schema #/definitions/ManagementPolicySchema
 */
export interface ManagementPolicySchema {
  /**
   * The Storage Account ManagementPolicies Rules. See more details in: https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
   *
   * @schema #/definitions/ManagementPolicySchema#rules
   */
  readonly rules: ManagementPolicyRule[];

}

/**
 * A collection of information about the state of the connection between service consumer and provider.
 *
 * @schema #/definitions/PrivateLinkServiceConnectionState
 */
export interface PrivateLinkServiceConnectionState {
  /**
   * Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.
   *
   * @schema #/definitions/PrivateLinkServiceConnectionState#status
   */
  readonly status?: privateLinkServiceConnectionStateStatusEnum;

  /**
   * The reason for approval/rejection of the connection.
   *
   * @schema #/definitions/PrivateLinkServiceConnectionState#description
   */
  readonly description?: string;

  /**
   * A message indicating if changes on the service provider require any updates on the consumer.
   *
   * @schema #/definitions/PrivateLinkServiceConnectionState#actionRequired
   */
  readonly actionRequired?: string;

}

export enum privateEndpointConnectionPropertiesProvisioningStateEnum {
  SUCCEEDED = 'Succeeded',
  CREATING = 'Creating',
  DELETING = 'Deleting',
  FAILED = 'Failed',
}

/**
 * A list of services that support encryption.
 *
 * @schema #/definitions/EncryptionServices
 */
export interface EncryptionServices {
  /**
   * The encryption function of the blob storage service.
   *
   * @schema #/definitions/EncryptionServices#blob
   */
  readonly blob?: EncryptionService;

  /**
   * The encryption function of the file storage service.
   *
   * @schema #/definitions/EncryptionServices#file
   */
  readonly file?: EncryptionService;

  /**
   * The encryption function of the table storage service.
   *
   * @schema #/definitions/EncryptionServices#table
   */
  readonly table?: EncryptionService;

  /**
   * The encryption function of the queue storage service.
   *
   * @schema #/definitions/EncryptionServices#queue
   */
  readonly queue?: EncryptionService;

}

export enum encryptionKeySourceEnum {
  \\"MICROSOFT_STORAGE\\" = 'Microsoft.Storage',
  \\"MICROSOFT_KEYVAULT\\" = 'Microsoft.Keyvault',
}

/**
 * Properties of key vault.
 *
 * @schema #/definitions/KeyVaultProperties
 */
export interface KeyVaultProperties {
  /**
   * The name of KeyVault key.
   *
   * @schema #/definitions/KeyVaultProperties#keyname
   */
  readonly keyname?: string;

  /**
   * The version of KeyVault key.
   *
   * @schema #/definitions/KeyVaultProperties#keyversion
   */
  readonly keyversion?: string;

  /**
   * The Uri of KeyVault.
   *
   * @schema #/definitions/KeyVaultProperties#keyvaulturi
   */
  readonly keyvaulturi?: string;

}

export enum networkRuleSetBypassEnum {
  NONE = 'None',
  LOGGING = 'Logging',
  METRICS = 'Metrics',
  AZURE_SERVICES = 'AzureServices',
}

/**
 * Virtual Network rule.
 *
 * @schema #/definitions/VirtualNetworkRule
 */
export interface VirtualNetworkRule {
  /**
   * Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{vnetName}/subnets/{subnetName}.
   *
   * @schema #/definitions/VirtualNetworkRule#id
   */
  readonly id: string;

  /**
   * The action of virtual network rule.
   *
   * @schema #/definitions/VirtualNetworkRule#action
   */
  readonly action?: virtualNetworkRuleActionEnum;

  /**
   * Gets the state of virtual network rule.
   *
   * @schema #/definitions/VirtualNetworkRule#state
   */
  readonly state?: virtualNetworkRuleStateEnum;

}

/**
 * IP rule with specific IP or IP range in CIDR format.
 *
 * @schema #/definitions/IPRule
 */
export interface IpRule {
  /**
   * Specifies the IP or IP range in CIDR format. Only IPV4 address is allowed.
   *
   * @schema #/definitions/IPRule#value
   */
  readonly value: string;

  /**
   * The action of IP ACL rule.
   *
   * @schema #/definitions/IPRule#action
   */
  readonly action?: ipRuleActionEnum;

}

export enum networkRuleSetDefaultActionEnum {
  ALLOW = 'Allow',
  DENY = 'Deny',
}

export enum azureFilesIdentityBasedAuthenticationDirectoryServiceOptionsEnum {
  NONE = 'None',
  AADDS = 'AADDS',
  AD = 'AD',
}

/**
 * Settings properties for Active Directory (AD).
 *
 * @schema #/definitions/ActiveDirectoryProperties
 */
export interface ActiveDirectoryProperties {
  /**
   * Specifies the primary domain that the AD DNS server is authoritative for.
   *
   * @schema #/definitions/ActiveDirectoryProperties#domainName
   */
  readonly domainName: string;

  /**
   * Specifies the NetBIOS domain name.
   *
   * @schema #/definitions/ActiveDirectoryProperties#netBiosDomainName
   */
  readonly netBiosDomainName: string;

  /**
   * Specifies the Active Directory forest to get.
   *
   * @schema #/definitions/ActiveDirectoryProperties#forestName
   */
  readonly forestName: string;

  /**
   * Specifies the domain GUID.
   *
   * @schema #/definitions/ActiveDirectoryProperties#domainGuid
   */
  readonly domainGuid: string;

  /**
   * Specifies the security identifier (SID).
   *
   * @schema #/definitions/ActiveDirectoryProperties#domainSid
   */
  readonly domainSid: string;

  /**
   * Specifies the security identifier (SID) for Azure Storage.
   *
   * @schema #/definitions/ActiveDirectoryProperties#azureStorageSid
   */
  readonly azureStorageSid: string;

}

export enum routingPreferenceRoutingChoiceEnum {
  MICROSOFT_ROUTING = 'MicrosoftRouting',
  INTERNET_ROUTING = 'InternetRouting',
}

export enum storageAccountsFileServicesChildResourceNameEnum {
  DEFAULT = 'default',
}

export enum storageAccountsFileServicesChildResourceTypeEnum {
  FILE_SERVICES = 'fileServices',
}

export enum storageAccountsFileServicesChildResourceApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

export enum storageAccountsBlobServicesChildResourceNameEnum {
  DEFAULT = 'default',
}

export enum storageAccountsBlobServicesChildResourceTypeEnum {
  BLOB_SERVICES = 'blobServices',
}

export enum storageAccountsBlobServicesChildResourceApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

export enum storageAccountsPrivateEndpointConnectionsChildResourceTypeEnum {
  PRIVATE_ENDPOINT_CONNECTIONS = 'privateEndpointConnections',
}

export enum storageAccountsPrivateEndpointConnectionsChildResourceApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

export enum storageAccountsManagementPoliciesChildResourceNameEnum {
  DEFAULT = 'default',
}

export enum storageAccountsManagementPoliciesChildResourceTypeEnum {
  MANAGEMENT_POLICIES = 'managementPolicies',
}

export enum storageAccountsManagementPoliciesChildResourceApiVersionEnum {
  \\"2019_06_01\\" = '2019-06-01',
}

/**
 * Specifies a CORS rule for the Blob service.
 *
 * @schema #/definitions/CorsRule
 */
export interface CorsRule {
  /**
   * Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \\"*\\" to allow all domains
   *
   * @schema #/definitions/CorsRule#allowedOrigins
   */
  readonly allowedOrigins: string[];

  /**
   * Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.
   *
   * @schema #/definitions/CorsRule#allowedMethods
   */
  readonly allowedMethods: corsRuleAllowedMethodsEnum[];

  /**
   * Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.
   *
   * @schema #/definitions/CorsRule#maxAgeInSeconds
   */
  readonly maxAgeInSeconds: number;

  /**
   * Required if CorsRule element is present. A list of response headers to expose to CORS clients.
   *
   * @schema #/definitions/CorsRule#exposedHeaders
   */
  readonly exposedHeaders: string[];

  /**
   * Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.
   *
   * @schema #/definitions/CorsRule#allowedHeaders
   */
  readonly allowedHeaders: string[];

}

/**
 * An object that wraps the Lifecycle rule. Each rule is uniquely defined by name.
 *
 * @schema #/definitions/ManagementPolicyRule
 */
export interface ManagementPolicyRule {
  /**
   * Rule is enabled if set to true.
   *
   * @schema #/definitions/ManagementPolicyRule#enabled
   */
  readonly enabled?: boolean;

  /**
   * A rule name can contain any combination of alpha numeric characters. Rule name is case-sensitive. It must be unique within a policy.
   *
   * @schema #/definitions/ManagementPolicyRule#name
   */
  readonly name: string;

  /**
   * The valid value is Lifecycle
   *
   * @schema #/definitions/ManagementPolicyRule#type
   */
  readonly type: managementPolicyRuleTypeEnum;

  /**
   * An object that defines the Lifecycle rule.
   *
   * @schema #/definitions/ManagementPolicyRule#definition
   */
  readonly definition: ManagementPolicyDefinition;

}

export enum privateLinkServiceConnectionStateStatusEnum {
  PENDING = 'Pending',
  APPROVED = 'Approved',
  REJECTED = 'Rejected',
}

/**
 * A service that allows server-side encryption to be used.
 *
 * @schema #/definitions/EncryptionService
 */
export interface EncryptionService {
  /**
   * A boolean indicating whether or not the service encrypts the data as it is stored.
   *
   * @schema #/definitions/EncryptionService#enabled
   */
  readonly enabled?: boolean;

  /**
   * Encryption key type to be used for the encryption service. 'Account' key type implies that an account-scoped encryption key will be used. 'Service' key type implies that a default service key is used.
   *
   * @schema #/definitions/EncryptionService#keyType
   */
  readonly keyType?: encryptionServiceKeyTypeEnum;

}

export enum virtualNetworkRuleActionEnum {
  ALLOW = 'Allow',
}

export enum virtualNetworkRuleStateEnum {
  PROVISIONING = 'provisioning',
  DEPROVISIONING = 'deprovisioning',
  SUCCEEDED = 'succeeded',
  FAILED = 'failed',
  NETWORK_SOURCE_DELETED = 'networkSourceDeleted',
}

export enum ipRuleActionEnum {
  ALLOW = 'Allow',
}

export enum corsRuleAllowedMethodsEnum {
  DELETE = 'DELETE',
  GET = 'GET',
  HEAD = 'HEAD',
  MERGE = 'MERGE',
  POST = 'POST',
  OPTIONS = 'OPTIONS',
  PUT = 'PUT',
}

export enum managementPolicyRuleTypeEnum {
  LIFECYCLE = 'Lifecycle',
}

/**
 * An object that defines the Lifecycle rule. Each definition is made up with a filters set and an actions set.
 *
 * @schema #/definitions/ManagementPolicyDefinition
 */
export interface ManagementPolicyDefinition {
  /**
   * An object that defines the action set.
   *
   * @schema #/definitions/ManagementPolicyDefinition#actions
   */
  readonly actions: ManagementPolicyAction;

  /**
   * An object that defines the filter set.
   *
   * @schema #/definitions/ManagementPolicyDefinition#filters
   */
  readonly filters?: ManagementPolicyFilter;

}

export enum encryptionServiceKeyTypeEnum {
  SERVICE = 'Service',
  ACCOUNT = 'Account',
}

/**
 * Actions are applied to the filtered blobs when the execution condition is met.
 *
 * @schema #/definitions/ManagementPolicyAction
 */
export interface ManagementPolicyAction {
  /**
   * The management policy action for base blob
   *
   * @schema #/definitions/ManagementPolicyAction#baseBlob
   */
  readonly baseBlob?: ManagementPolicyBaseBlob;

  /**
   * The management policy action for snapshot
   *
   * @schema #/definitions/ManagementPolicyAction#snapshot
   */
  readonly snapshot?: ManagementPolicySnapShot;

}

/**
 * Filters limit rule actions to a subset of blobs within the storage account. If multiple filters are defined, a logical AND is performed on all filters. 
 *
 * @schema #/definitions/ManagementPolicyFilter
 */
export interface ManagementPolicyFilter {
  /**
   * An array of strings for prefixes to be match.
   *
   * @schema #/definitions/ManagementPolicyFilter#prefixMatch
   */
  readonly prefixMatch?: string[];

  /**
   * An array of predefined enum values. Only blockBlob is supported.
   *
   * @schema #/definitions/ManagementPolicyFilter#blobTypes
   */
  readonly blobTypes: string[];

}

/**
 * Management policy action for base blob.
 *
 * @schema #/definitions/ManagementPolicyBaseBlob
 */
export interface ManagementPolicyBaseBlob {
  /**
   * The function to tier blobs to cool storage. Support blobs currently at Hot tier
   *
   * @schema #/definitions/ManagementPolicyBaseBlob#tierToCool
   */
  readonly tierToCool?: DateAfterModification;

  /**
   * The function to tier blobs to archive storage. Support blobs currently at Hot or Cool tier
   *
   * @schema #/definitions/ManagementPolicyBaseBlob#tierToArchive
   */
  readonly tierToArchive?: DateAfterModification;

  /**
   * The function to delete the blob
   *
   * @schema #/definitions/ManagementPolicyBaseBlob#delete
   */
  readonly delete?: DateAfterModification;

}

/**
 * Management policy action for snapshot.
 *
 * @schema #/definitions/ManagementPolicySnapShot
 */
export interface ManagementPolicySnapShot {
  /**
   * The function to delete the blob snapshot
   *
   * @schema #/definitions/ManagementPolicySnapShot#delete
   */
  readonly delete?: DateAfterCreation;

}

/**
 * Object to define the number of days after last modification.
 *
 * @schema #/definitions/DateAfterModification
 */
export interface DateAfterModification {
  /**
   * Value indicating the age in days after last modification
   *
   * @schema #/definitions/DateAfterModification#daysAfterModificationGreaterThan
   */
  readonly daysAfterModificationGreaterThan: number;

}

/**
 * Object to define the number of days after creation.
 *
 * @schema #/definitions/DateAfterCreation
 */
export interface DateAfterCreation {
  /**
   * Value indicating the age in days after creation
   *
   * @schema #/definitions/DateAfterCreation#daysAfterCreationGreaterThan
   */
  readonly daysAfterCreationGreaterThan: number;

}

"
`;
